#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.56)
AC_INIT(probed, 1.0.1, oleksiy@kharkiv.com.ua)
AC_CONFIG_SRCDIR([lib])
AC_CONFIG_HEADER([src/config.h])

AC_PROG_LIBTOOL

AM_INIT_AUTOMAKE(probed, 1.0.1, oleksiy@kharkiv.com.ua)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

# Checks for libraries.
AC_CHECK_LIB([c_r], [pthread_create])
AC_CHECK_LIB([pthread], [pthread_create])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h malloc.h netinet/in.h stdlib.h string.h sys/socket.h sys/time.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_ERROR_AT_LINE
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([inet_ntoa memset socket strcasecmp strdup strerror])

##############################################################################
# OpenSSL

AC_ARG_WITH(ssl,
[  --without-ssl        Disables all OpenSSL dependent modules ],
ssl_support="no",ssl_support="yes")

if test "x$ssl_support" = "xno"
then
    ssl_support=$withval
fi

AC_ARG_WITH(ssl-libs,
[  --with-ssl-libs=DIR  Look for ssl libraries in DIR],
ssl_libs=$withval,ssl_libs="")

if test "x$ssl_support" = "xyes"
then
AC_MSG_CHECKING([for the ssl libraries])

alt_lib1="/usr/local/ssl/lib"
alt_lib2="/usr/ssl/lib"

ssl_ok=no

AC_MSG_RESULT([$ssl_libs])

if test -n "$ssl_libs"
then
  LIBS="-L$ssl_libs $LIBS"
  AC_CHECK_LIB(ssl,ssl2_accept,ssl_ok=yes,ssl_ok=no)
  if test "x$ssl_ok" != "xyes"
  then
    AC_MSG_ERROR([Could not find libssl in '$ssl_libs'. Try another location.])
  fi
fi

SAVE_LIBS=$LIBS

# check default
if test "x$ssl_ok" != "xyes"
then
    AC_CHECK_LIB(ssl,ssl2_accept,ssl_ok=yes,ssl_ok=no)
fi

if test "x$ssl_ok" != "xyes"
then
  LIBS="-L$alt_lib1 $SAVE_LIBS"
  AC_CHECK_LIB(ssl,ssl2_enc,ssl_ok=yes,ssl_ok=no)
fi

if test "x$ssl_ok" != "xyes"
then
    LIBS="-L$alt_lib2 $SAVE_LIBS"
    AC_CHECK_LIB(ssl,ssl2_enc_init,ssl_ok=yes,ssl_ok=no)
fi

if test "x$ssl_ok" != "xyes"
then
    AC_MSG_ERROR([Could not find libssl in '$alt_lib1' or '$alt_lib2'. Please specify location])
fi

# ssl headers

AC_ARG_WITH(ssl-includes,
[  --with-ssl-includes=DIR      Look for ssl include files in DIR],
ssl_includes=$withval,ssl_includes="")

AC_MSG_CHECKING([for ssl include files in $ssl_includes])

# common alternate ssl_include locations
alt_inc1="/usr/local/ssl/include"
alt_inc2="/usr/include/ssl"
alt_inc3="/usr/include"

if test ! -f "$ssl_includes/openssl/ssl.h"
then
  if test ! -f "$alt_inc1/openssl/ssl.h"
  then
    if test ! -f "$alt_inc2/openssl/ssl.h"
    then
        if test ! -f "$alt_inc3/openssl/ssl.h"
        then
            AC_MSG_RESULT(no)
            AC_MSG_ERROR([Could not find the ssl include file openssl/ssl.h in '$alt_inc1', '$alt_inc2' or '$alt_inc3'])
        else
            AC_MSG_RESULT($alt_inc3)
            SSL_INCLUDES="-I$alt_inc3"
            AC_SUBST(SSL_INCLUDES)
        fi
    else
        AC_MSG_RESULT($alt_inc2)
        SSL_INCLUDES="-I$alt_inc2"
        AC_SUBST(SSL_INCLUDES)
    fi
  else
      AC_MSG_RESULT($alt_inc1)
      SSL_INCLUDES="-I$alt_inc1"
      AC_SUBST(SSL_INCLUDES)
  fi
else
    AC_MSG_RESULT($ssl_includes)
    SSL_INCLUDES="-I$ssl_includes"
    AC_SUBST(SSL_INCLUDES)
fi

fi

AM_CONDITIONAL(SSL, test "x$ssl_support" = "xyes")

###############################

dnl Check for IPv6 support

AC_MSG_CHECKING([for IPv6 support])

AC_RUN_IFELSE(
    AC_LANG_SOURCE([
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

struct sockaddr_in6 s6;

int main() {
    if(socket(PF_INET6, SOCK_DGRAM, 0) == -1){
        return 1;
    }
    return 0;
}]),
    AC_MSG_RESULT(yes)
    AC_DEFINE([HAVE_IPV6], [1], [is IPv6 support enabled]),
    AC_MSG_RESULT(no),
    AC_MSG_RESULT(cross_compiling)
)

# Compiler features options
CXXFLAGS="${CXXFLAGS} -fno-exceptions"
# Optimization options
CXXFLAGS="${CXXFLAGS} -O0 -fomit-frame-pointer -fexpensive-optimizations"
# Compiling options
CXXFLAGS="${CXXFLAGS} -pipe"
# Warning options
CXXFLAGS="${CXXFLAGS} -Werror -Wall -Winline"
#
CXXFLAGS="${CXXFLAGS} -D_REENTRANT -D_THREAD_SAFE"

# All is same for C
CFLAGS=$CXXFLAGS


AC_CONFIG_FILES([Makefile
                 lib/Makefile
                 lib/dotconf++/Makefile
                 src/Makefile])
AC_OUTPUT
